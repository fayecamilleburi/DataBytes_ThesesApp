generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String
  password    String    @unique
  email       String    @unique
  role        Role      @default(USER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  accounts    Account[]
  sessions    Session[]
  admin       Admin?    @relation("AdminUser")  
  librarian   Librarian?@relation("LibrarianUser")
}

model Session {
  id           Int       @id @default(autoincrement())
  userId       Int       
  user         User      @relation(fields: [userId], references: [id])
  sessionToken String    @unique
  expiresAt    DateTime  
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Account {
  id                 Int      @id @default(autoincrement())
  userId             Int      
  user               User     @relation(fields: [userId], references: [id])
  resourceName       String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
}

model Admin {
  userId     Int    @id
  adminId    User   @relation("AdminUser", fields: [userId], references: [id]) 
  canEdit    Boolean @default(true)
  canDelete  Boolean @default(true)
}

model Librarian {
  userId      Int    @id
  librarianId User   @relation("LibrarianUser", fields: [userId], references: [id])
  canEdit     Boolean @default(true)
  canDelete   Boolean @default(true)
}

enum Role {
  USER
  ADMIN
  LIBRARIAN
}
        
